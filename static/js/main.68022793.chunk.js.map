{"version":3,"sources":["components/styles.module.css","components/Dashboard/Balance/Balance.js","components/Dashboard/Controls/Controls.js","components/Dashboard/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","App.js","index.js"],"names":["module","exports","Balance","deposit","withdraw","balance","className","s","icons","num","Controls","onDeposit","onWithdraw","onChange","amount","controls","type","name","value","inputControls","onClick","but","TransactionHistory","transactions","history","top","map","el","key","id","date","noMoney","toast","warn","containerId","noValue","Dashboard","state","setState","prevState","addNumber","e","target","newTransaction","uuid","Date","toLocaleString","hour12","reset","transFromLS","localStorage","getItem","newState","JSON","parse","this","prevProps","setItem","stringify","reduce","acc","dashboard","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68022793.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"styles_dashboard__17GVm\",\"controls\":\"styles_controls__3KkUt\",\"inputControls\":\"styles_inputControls__3_yg6\",\"balance\":\"styles_balance__1zek6\",\"history\":\"styles_history__2y3Ek\",\"top\":\"styles_top__2HVAW\",\"icons\":\"styles_icons__1v95H\",\"but\":\"styles_but__1ZeqL\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IoMdTrendingUp, IoMdTrendingDown } from 'react-icons/io';\nimport s from '../../styles.module.css';\n\nconst Balance = ({ deposit, withdraw, balance }) => (\n  <section className={s.balance}>\n    <span>\n      <span className={s.icons}>\n        {' '}\n        <IoMdTrendingUp />{' '}\n      </span>\n      {deposit}$\n    </span>\n    <span>\n      <span className={s.icons}>\n        <IoMdTrendingDown />\n      </span>\n      {withdraw}$\n    </span>\n\n    <span className={s.num}>Balance: {balance}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  deposit: PropTypes.number.isRequired,\n  withdraw: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../../styles.module.css';\n\nconst Controls = ({ onDeposit, onWithdraw, onChange, amount }) => (\n  <section className={s.controls}>\n    <input\n      onChange={onChange}\n      type=\"number\"\n      name=\"amount\"\n      value={amount === 0 ? '' : amount}\n      className={s.inputControls}\n    />\n    <button onClick={onDeposit} type=\"button\" className={s.but}>\n      Deposit\n    </button>\n    <button onClick={onWithdraw} type=\"button\" className={s.but}>\n      Withdraw\n    </button>\n  </section>\n);\n\nexport default Controls;\n\nControls.propTypes = {\n  onDeposit: PropTypes.func.isRequired,\n  onWithdraw: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  amount: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../../styles.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={s.history}>\n      <thead className={s.top}>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(el => (\n          <tr key={el.id}>\n            <td>{el.type}</td>\n            <td>{el.amount}$</td>\n            <td>{el.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport uuid from 'uuid/v1';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Balance from './Balance/Balance';\nimport Controls from './Controls/Controls';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport s from '../styles.module.css';\n\nconst noMoney = () =>\n  toast.warn('На счету недостаточно средств для проведения операции!', {\n    containerId: 'A',\n  });\nconst noValue = () =>\n  toast('Введите сумму для проведения операции!', { containerId: 'B' });\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    amount: 0,\n  };\n\n  componentDidMount() {\n    const transFromLS = localStorage.getItem('transactions');\n    if (transFromLS) {\n      const newState = JSON.parse(transFromLS);\n      this.setState({...newState});\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions } = this.state;\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify({ ...this.state }));\n    }\n  }\n\n  onDeposit = () => {\n    if (this.state.amount === 0) {\n      noValue();\n    } else {\n      this.setState(prevState => ({\n        balance: prevState.balance + +prevState.amount,\n      }));\n      this.addNumber('DEPOSIT');\n    }\n    // this.reset();\n  };\n\n  onWithdraw = () => {\n    if (this.state.amount < this.state.balance) {\n      this.setState(prevState => ({\n        balance: prevState.balance - +prevState.amount,\n      }));\n      this.addNumber('WITHDRAW');\n    } else {\n      noMoney();\n    }\n  };\n\n  onChange = e => {\n    this.setState({ amount: +e.target.value });\n  };\n\n  addNumber = type => {\n    const { amount } = this.state;\n    if (amount > 0) {\n      const newTransaction = {\n        id: uuid(),\n        type,\n        amount,\n        date: new Date().toLocaleString('en-US', { hour12: false }),\n      };\n\n      this.setState(state => ({\n        transactions: [...state.transactions, newTransaction],\n      }));\n      this.reset();\n    }\n  };\n\n  reset = () => {\n    // const { amount } = this.state;\n    this.setState({\n      amount: 0,\n    });\n  };\n\n  render() {\n    const { transactions } = this.state;\n    const { balance } = this.state;\n    const { amount } = this.state;\n\n    const deposit = transactions.reduce((acc, el) => {\n      if (el.type === 'DEPOSIT') {\n        return acc + el.amount;\n      }\n      return acc;\n    }, 0);\n\n    const withdraw = transactions.reduce((acc, el) => {\n      if (el.type === 'WITHDRAW') {\n        return acc + el.amount;\n      }\n      return acc;\n    }, 0);\n\n    // console.log(deposit);\n    return (\n      <div className={s.dashboard}>\n        <Controls\n          onChange={this.onChange}\n          onDeposit={this.onDeposit}\n          onWithdraw={this.onWithdraw}\n          amount={amount}\n        />\n        <Balance\n          deposit={deposit}\n          withdraw={withdraw}\n          balance={balance}\n          amount={amount}\n        />\n\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nconst App = () => (\n  <div>\n    <Dashboard />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}