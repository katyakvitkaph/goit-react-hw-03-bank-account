{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-02-bank-account/src/components/Dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport uuid from 'uuid/v1';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Balance from './Balance/Balance';\nimport Controls from './Controls/Controls';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport s from '../styles.module.css';\nexport default class Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transactions: [],\n      balance: 0,\n      amount: 0\n    };\n\n    this.onDeposit = () => {\n      this.setState(prevState => ({\n        balance: prevState.balance + +prevState.amount\n      }));\n      this.addNumber('DEPOSIT');\n    };\n\n    this.onWithdraw = () => {\n      if (this.state.amount > this.state.balance) {} else {\n        this.setState(prevState => ({\n          balance: prevState.balance - +prevState.amount\n        }));\n        this.addNumber('WITHDRAW');\n      }\n    };\n\n    this.onChange = e => {\n      this.setState({\n        amount: +e.target.value\n      }); // this.reset();\n    };\n\n    this.addNumber = type => {\n      console.log(this.state.transactions);\n      const amount = this.state.amount;\n\n      if (amount > 0) {\n        const newTransaction = {\n          id: uuid(),\n          type,\n          amount,\n          date: new Date().toLocaleString('en-US', {\n            hour12: false\n          })\n        };\n        this.setState(state => ({\n          transactions: [...state.transactions, newTransaction]\n        }), () => console.log(this.state.transactions));\n      }\n    };\n\n    this.reset = () => {\n      this.setState({\n        amount: ''\n      });\n    };\n  }\n\n  render() {\n    const transactions = this.state.transactions;\n    const balance = this.state.balance;\n    const deposit = transactions.reduce((acc, el) => {\n      if (el.type === 'DEPOSIT') {\n        return acc + el.amount;\n      }\n\n      return acc;\n    }, 0);\n    const withdraw = transactions.reduce((acc, el) => {\n      if (el.type === 'WITHDRAW') {\n        return acc + el.amount;\n      }\n\n      return acc;\n    }, 0); // console.log(deposit);\n\n    return React.createElement(\"div\", {\n      className: s.dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Controls, {\n      onChange: this.onChange,\n      onDeposit: this.onDeposit,\n      onWithdraw: this.onWithdraw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Balance, {\n      deposit: deposit,\n      withdraw: withdraw,\n      balance: balance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(TransactionHistory, {\n      transactions: transactions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-02-bank-account/src/components/Dashboard/Dashboard.js"],"names":["React","Component","uuid","ToastContainer","toast","Balance","Controls","TransactionHistory","s","Dashboard","state","transactions","balance","amount","onDeposit","setState","prevState","addNumber","onWithdraw","onChange","e","target","value","type","console","log","newTransaction","id","date","Date","toLocaleString","hour12","reset","render","deposit","reduce","acc","el","withdraw","dashboard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport uuid from 'uuid/v1';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Balance from './Balance/Balance';\nimport Controls from './Controls/Controls';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport s from '../styles.module.css';\n\n\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    amount: 0,\n  };\n\n  onDeposit = () => {\n    this.setState(prevState => ({\n      balance: prevState.balance + +prevState.amount,\n    }));\n    this.addNumber('DEPOSIT');\n  };\n\n  onWithdraw = () => {\n    if (this.state.amount > this.state.balance) {\n\n    } else {\n      this.setState(prevState => ({\n        balance: prevState.balance - +prevState.amount,\n      }));\n      this.addNumber('WITHDRAW');\n    }\n  };\n\n  onChange = e => {\n    this.setState({ amount: +e.target.value });\n\n    // this.reset();\n  };\n\n  addNumber = type => {\n    console.log(this.state.transactions);\n    const { amount } = this.state;\n    if (amount > 0) {\n      const newTransaction = {\n        id: uuid(),\n        type,\n        amount,\n        date: new Date().toLocaleString('en-US', { hour12: false }),\n      };\n\n      this.setState(\n        state => ({\n          transactions: [...state.transactions, newTransaction],\n        }),\n        () => console.log(this.state.transactions),\n      );\n    }\n  };\n\n  //  depositBalance = (transactions) => this.transactions.reduce((acc, el) => {\n  //     if (el.type === 'DEPOSIT') {\n  //       return +(acc + el.amount);\n  //     }\n  //   }, 0);\n\n  reset = () => {\n    this.setState({ amount: '' });\n  };\n\n  render() {\n    const { transactions } = this.state;\n    const { balance } = this.state;\n\n    const deposit = transactions.reduce((acc, el) => {\n      if (el.type === 'DEPOSIT') {\n        return acc + el.amount;\n      }\n      return acc;\n    }, 0);\n\n    const withdraw = transactions.reduce((acc, el) => {\n      if (el.type === 'WITHDRAW') {\n        return acc + el.amount;\n      }\n      return acc;\n    }, 0);\n\n    // console.log(deposit);\n    return (\n      <div className={s.dashboard}>\n        <Controls\n          onChange={this.onChange}\n          onDeposit={this.onDeposit}\n          onWithdraw={this.onWithdraw}\n        />\n        <Balance deposit={deposit} withdraw={withdraw} balance={balance} />\n\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}