{"ast":null,"code":"import _toConsumableArray from\"/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-02-bank-account/goit-react-hw-02-bank-account/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-02-bank-account/goit-react-hw-02-bank-account/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-02-bank-account/goit-react-hw-02-bank-account/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-02-bank-account/goit-react-hw-02-bank-account/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-02-bank-account/goit-react-hw-02-bank-account/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-02-bank-account/goit-react-hw-02-bank-account/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import uuid from'uuid/v1';import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import Balance from'./Balance/Balance';import Controls from'./Controls/Controls';import TransactionHistory from'./TransactionHistory/TransactionHistory';import s from'../styles.module.css';var noMoney=function noMoney(){return toast.warn('На счету недостаточно средств для проведения операции!',{containerId:'A'});};var noValue=function noValue(){return toast('Введите сумму для проведения операции!',{containerId:'B'});};var Dashboard=/*#__PURE__*/function(_Component){_inherits(Dashboard,_Component);function Dashboard(){var _getPrototypeOf2;var _this;_classCallCheck(this,Dashboard);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={transactions:[],balance:0,amount:0};_this.onDeposit=function(){if(_this.state.amount===0){noValue();}else{_this.setState(function(prevState){return{balance:prevState.balance+ +prevState.amount};});_this.addNumber('DEPOSIT');}// this.reset();\n};_this.onWithdraw=function(){if(_this.state.amount<_this.state.balance){_this.setState(function(prevState){return{balance:prevState.balance-+prevState.amount};});_this.addNumber('WITHDRAW');}else{noMoney();}};_this.onChange=function(e){_this.setState({amount:+e.target.value});};_this.addNumber=function(type){var amount=_this.state.amount;if(amount>0){var newTransaction={id:uuid(),type:type,amount:amount,date:new Date().toLocaleString('en-US',{hour12:false})};_this.setState(function(state){return{transactions:[].concat(_toConsumableArray(state.transactions),[newTransaction])};});_this.reset();}};_this.reset=function(){// const { amount } = this.state;\n_this.setState({amount:0});};return _this;}_createClass(Dashboard,[{key:\"render\",value:function render(){var transactions=this.state.transactions;var balance=this.state.balance;var amount=this.state.amount;var deposit=transactions.reduce(function(acc,el){if(el.type==='DEPOSIT'){return acc+el.amount;}return acc;},0);var withdraw=transactions.reduce(function(acc,el){if(el.type==='WITHDRAW'){return acc+el.amount;}return acc;},0);// console.log(deposit);\nreturn React.createElement(\"div\",{className:s.dashboard},React.createElement(Controls,{onChange:this.onChange,onDeposit:this.onDeposit,onWithdraw:this.onWithdraw,amount:amount}),React.createElement(Balance,{deposit:deposit,withdraw:withdraw,balance:balance,amount:amount}),React.createElement(TransactionHistory,{transactions:transactions}),React.createElement(ToastContainer,null));}}]);return Dashboard;}(Component);export{Dashboard as default};","map":{"version":3,"sources":["/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-02-bank-account/goit-react-hw-02-bank-account/src/components/Dashboard/Dashboard.js"],"names":["React","Component","uuid","ToastContainer","toast","Balance","Controls","TransactionHistory","s","noMoney","warn","containerId","noValue","Dashboard","state","transactions","balance","amount","onDeposit","setState","prevState","addNumber","onWithdraw","onChange","e","target","value","type","newTransaction","id","date","Date","toLocaleString","hour12","reset","deposit","reduce","acc","el","withdraw","dashboard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport uuid from 'uuid/v1';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Balance from './Balance/Balance';\nimport Controls from './Controls/Controls';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport s from '../styles.module.css';\n\nconst noMoney = () =>\n  toast.warn('На счету недостаточно средств для проведения операции!', {\n    containerId: 'A',\n  });\nconst noValue = () =>\n  toast('Введите сумму для проведения операции!', { containerId: 'B' });\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    amount: 0,\n  };\n\n  onDeposit = () => {\n    if (this.state.amount === 0) {\n      noValue();\n    } else {\n      this.setState(prevState => ({\n        balance: prevState.balance + +prevState.amount,\n      }));\n      this.addNumber('DEPOSIT');\n    }\n    // this.reset();\n  };\n\n  onWithdraw = () => {\n    if (this.state.amount < this.state.balance) {\n      this.setState(prevState => ({\n        balance: prevState.balance - +prevState.amount,\n      }));\n      this.addNumber('WITHDRAW');\n    } else {\n      noMoney();\n    }\n  };\n\n  onChange = e => {\n    this.setState({ amount: +e.target.value });\n  };\n\n  addNumber = type => {\n    const { amount } = this.state;\n    if (amount > 0) {\n      const newTransaction = {\n        id: uuid(),\n        type,\n        amount,\n        date: new Date().toLocaleString('en-US', { hour12: false }),\n      };\n\n      this.setState(state => ({\n        transactions: [...state.transactions, newTransaction],\n      }));\n      this.reset();\n    }\n  };\n\n  reset = () => {\n    // const { amount } = this.state;\n    this.setState({\n      amount: 0,\n    });\n  };\n\n  render() {\n    const { transactions } = this.state;\n    const { balance } = this.state;\n    const { amount } = this.state;\n\n    const deposit = transactions.reduce((acc, el) => {\n      if (el.type === 'DEPOSIT') {\n        return acc + el.amount;\n      }\n      return acc;\n    }, 0);\n\n    const withdraw = transactions.reduce((acc, el) => {\n      if (el.type === 'WITHDRAW') {\n        return acc + el.amount;\n      }\n      return acc;\n    }, 0);\n\n    // console.log(deposit);\n    return (\n      <div className={s.dashboard}>\n        <Controls\n          onChange={this.onChange}\n          onDeposit={this.onDeposit}\n          onWithdraw={this.onWithdraw}\n          amount={amount}\n        />\n        <Balance\n          deposit={deposit}\n          withdraw={withdraw}\n          balance={balance}\n          amount={amount}\n        />\n\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}