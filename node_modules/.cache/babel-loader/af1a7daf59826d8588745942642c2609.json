{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-03-bank-account/src/components/Dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport uuid from 'uuid/v1';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Balance from './Balance/Balance';\nimport Controls from './Controls/Controls';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport s from '../styles.module.css';\n\nconst noMoney = () => toast.warn('На счету недостаточно средств для проведения операции!', {\n  containerId: 'A'\n});\n\nconst noValue = () => toast('Введите сумму для проведения операции!', {\n  containerId: 'B'\n});\n\nexport default class Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transactions: [],\n      balance: 0,\n      amount: 0\n    };\n    this.saveDataLG = {\n      transactions: this.state,\n      balance: this.state\n    };\n\n    this.onDeposit = () => {\n      if (this.state.amount === 0) {\n        noValue();\n      } else {\n        this.setState(prevState => ({\n          balance: prevState.balance + +prevState.amount\n        }));\n        this.addNumber('DEPOSIT');\n      } // this.reset();\n\n    };\n\n    this.onWithdraw = () => {\n      if (this.state.amount <= this.state.balance) {\n        this.setState(prevState => ({\n          balance: prevState.balance - +prevState.amount\n        }));\n        this.addNumber('WITHDRAW');\n      } else {\n        noMoney();\n      }\n    };\n\n    this.onChange = e => {\n      this.setState({\n        amount: +e.target.value\n      });\n    };\n\n    this.addNumber = type => {\n      const amount = this.state.amount;\n\n      if (amount > 0) {\n        const newTransaction = {\n          id: uuid(),\n          type,\n          amount,\n          date: new Date().toLocaleString('en-US', {\n            hour12: false\n          })\n        };\n        this.setState(state => ({\n          transactions: [...state.transactions, newTransaction]\n        }));\n        this.reset();\n      }\n    };\n\n    this.reset = () => {\n      // const { amount } = this.state;\n      this.setState({\n        amount: 0\n      });\n    };\n  }\n\n  componentDidMount() {\n    // console.log('componentDidMount work');\n    const transFromLS = localStorage.getItem('transactions');\n\n    if (transFromLS) {\n      this.setState({\n        transactions: JSON.parse(transFromLS)\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    // console.log('componentDidUpdate work');\n    // const { transactions } = this.state;\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify({}));\n    }\n  }\n\n  render() {\n    const transactions = this.state.transactions;\n    const balance = this.state.balance;\n    const amount = this.state.amount;\n    const deposit = transactions.reduce((acc, el) => {\n      if (el.type === 'DEPOSIT') {\n        return acc + el.amount;\n      }\n\n      return acc;\n    }, 0);\n    const withdraw = transactions.reduce((acc, el) => {\n      if (el.type === 'WITHDRAW') {\n        return acc + el.amount;\n      }\n\n      return acc;\n    }, 0); // console.log(deposit);\n\n    return React.createElement(\"div\", {\n      className: s.dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Controls, {\n      onChange: this.onChange,\n      onDeposit: this.onDeposit,\n      onWithdraw: this.onWithdraw,\n      amount: amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Balance, {\n      deposit: deposit,\n      withdraw: withdraw,\n      balance: balance,\n      amount: amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(TransactionHistory, {\n      transactions: transactions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-03-bank-account/src/components/Dashboard/Dashboard.js"],"names":["React","Component","uuid","ToastContainer","toast","Balance","Controls","TransactionHistory","s","noMoney","warn","containerId","noValue","Dashboard","state","transactions","balance","amount","saveDataLG","onDeposit","setState","prevState","addNumber","onWithdraw","onChange","e","target","value","type","newTransaction","id","date","Date","toLocaleString","hour12","reset","componentDidMount","transFromLS","localStorage","getItem","JSON","parse","componentDidUpdate","setItem","stringify","render","deposit","reduce","acc","el","withdraw","dashboard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport uuid from 'uuid/v1';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Balance from './Balance/Balance';\nimport Controls from './Controls/Controls';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport s from '../styles.module.css';\n\nconst noMoney = () =>\n  toast.warn('На счету недостаточно средств для проведения операции!', {\n    containerId: 'A',\n  });\nconst noValue = () =>\n  toast('Введите сумму для проведения операции!', { containerId: 'B' });\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    amount: 0,\n  };\n\n  componentDidMount() {\n    // console.log('componentDidMount work');\n\n    const transFromLS = localStorage.getItem('transactions');\n    if (transFromLS) {\n      this.setState({ transactions: JSON.parse(transFromLS) });\n    }\n  }\n\n  saveDataLG = {\n    transactions: this.state,\n    balance: this.state,\n  };\n\n  componentDidUpdate(prevState) {\n    // console.log('componentDidUpdate work');\n\n    // const { transactions } = this.state;\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify({}));\n    }\n  }\n\n  onDeposit = () => {\n    if (this.state.amount === 0) {\n      noValue();\n    } else {\n      this.setState(prevState => ({\n        balance: prevState.balance + +prevState.amount,\n      }));\n      this.addNumber('DEPOSIT');\n    }\n    // this.reset();\n  };\n\n  onWithdraw = () => {\n    if (this.state.amount <= this.state.balance) {\n      this.setState(prevState => ({\n        balance: prevState.balance - +prevState.amount,\n      }));\n      this.addNumber('WITHDRAW');\n    } else {\n      noMoney();\n    }\n  };\n\n  onChange = e => {\n    this.setState({ amount: +e.target.value });\n  };\n\n  addNumber = type => {\n    const { amount } = this.state;\n    if (amount > 0) {\n      const newTransaction = {\n        id: uuid(),\n        type,\n        amount,\n        date: new Date().toLocaleString('en-US', { hour12: false }),\n      };\n\n      this.setState(state => ({\n        transactions: [...state.transactions, newTransaction],\n      }));\n      this.reset();\n    }\n  };\n\n  reset = () => {\n    // const { amount } = this.state;\n    this.setState({\n      amount: 0,\n    });\n  };\n\n  render() {\n    const { transactions } = this.state;\n    const { balance } = this.state;\n    const { amount } = this.state;\n\n    const deposit = transactions.reduce((acc, el) => {\n      if (el.type === 'DEPOSIT') {\n        return acc + el.amount;\n      }\n      return acc;\n    }, 0);\n\n    const withdraw = transactions.reduce((acc, el) => {\n      if (el.type === 'WITHDRAW') {\n        return acc + el.amount;\n      }\n      return acc;\n    }, 0);\n\n    // console.log(deposit);\n    return (\n      <div className={s.dashboard}>\n        <Controls\n          onChange={this.onChange}\n          onDeposit={this.onDeposit}\n          onWithdraw={this.onWithdraw}\n          amount={amount}\n        />\n        <Balance\n          deposit={deposit}\n          withdraw={withdraw}\n          balance={balance}\n          amount={amount}\n        />\n\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}