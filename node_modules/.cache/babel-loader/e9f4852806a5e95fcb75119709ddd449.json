{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-02-bank-account/src/components/Dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport uuid from 'uuid/v1';\nimport Balance from './Balance/Balance';\nimport Controls from './Controls/Controls';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport s from '../styles.module.css';\nexport default class Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transactions: [],\n      balance: 0,\n      amount: 0\n    };\n\n    this.onDeposit = () => {\n      this.setState(prevState => ({\n        balance: prevState.balance + +prevState.amount\n      }));\n      this.addNumber('DEPOSIT');\n      const deposit = transactions.reduce((total, transaction) => total + transaction.amount, 0);\n    };\n\n    this.onWithdraw = () => {\n      this.setState(prevState => ({\n        balance: prevState.balance - +prevState.amount\n      }));\n      this.addNumber('WITHDRAW');\n    };\n\n    this.onChange = e => {\n      this.setState({\n        amount: +e.target.value\n      }); // this.reset();\n    };\n\n    this.addNumber = type => {\n      console.log(this.state.transactions);\n      const amount = this.state.amount;\n\n      if (amount > 0) {\n        const newTransaction = {\n          id: uuid(),\n          type,\n          amount,\n          date: new Date().toLocaleString('en-US', {\n            hour12: false\n          })\n        };\n        this.setState(state => ({\n          transactions: [...state.transactions, newTransaction]\n        }), () => console.log(this.state.transactions));\n      }\n    };\n\n    this.reset = () => {\n      this.setState({\n        amount: ''\n      });\n    };\n  }\n\n  render() {\n    const transactions = this.state.transactions;\n    console.log(deposit);\n    return React.createElement(\"div\", {\n      className: s.dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Controls, {\n      onChange: this.onChange,\n      onDeposit: this.onDeposit,\n      onWithdraw: this.onWithdraw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Balance, {\n      deposit: deposit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(TransactionHistory, {\n      transactions: transactions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-02-bank-account/src/components/Dashboard/Dashboard.js"],"names":["React","Component","uuid","Balance","Controls","TransactionHistory","s","Dashboard","state","transactions","balance","amount","onDeposit","setState","prevState","addNumber","deposit","reduce","total","transaction","onWithdraw","onChange","e","target","value","type","console","log","newTransaction","id","date","Date","toLocaleString","hour12","reset","render","dashboard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport uuid from 'uuid/v1';\nimport Balance from './Balance/Balance';\nimport Controls from './Controls/Controls';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport s from '../styles.module.css';\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    amount: 0,\n  };\n\n  onDeposit = () => {\n    this.setState(prevState => ({\n      balance: prevState.balance + +prevState.amount,\n    }));\n    this.addNumber('DEPOSIT');\n\n    const deposit = transactions.reduce(\n      (total, transaction) => total + transaction.amount,\n      0,\n    );\n  };\n\n  onWithdraw = () => {\n    this.setState(prevState => ({\n      balance: prevState.balance - +prevState.amount,\n    }));\n    this.addNumber('WITHDRAW');\n\n\n  };\n\n  onChange = e => {\n    this.setState({ amount: +e.target.value });\n\n    // this.reset();\n  };\n\n  addNumber = type => {\n    console.log(this.state.transactions);\n    const { amount } = this.state;\n    if (amount > 0) {\n      const newTransaction = {\n        id: uuid(),\n        type,\n        amount,\n        date: new Date().toLocaleString('en-US', { hour12: false }),\n      };\n\n      this.setState(\n        state => ({\n          transactions: [...state.transactions, newTransaction],\n        }),\n        () => console.log(this.state.transactions),\n      );\n    }\n  };\n\n  reset = () => {\n    this.setState({ amount: '' });\n  };\n\n  render() {\n    const { transactions } = this.state;\n\nconsole.log(deposit);\n    return (\n      <div className={s.dashboard}>\n        <Controls\n          onChange={this.onChange}\n          onDeposit={this.onDeposit}\n          onWithdraw={this.onWithdraw}\n        />\n        <Balance deposit={deposit} />\n\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}