{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-02-bank-account/src/components/Dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport uuid from 'uuid/v1';\nimport Balance from './Balance/Balance';\nimport Controls from './Controls/Controls';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport s from '../styles.module.css';\nconst INITIAL_STATE = {};\nexport default class Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transactions: [],\n      balance: 0,\n      amount: 0\n    };\n\n    this.onDeposit = () => {\n      console.log('кнопочка работает');\n      this.setState(prevState => ({\n        balance: prevState.balance + +prevState.amount\n      })); // console.log(this.state.balance);\n      // const { balance } = this.state;\n      // const newTransaction = {\n      //   id: uuid(),\n      //   text: balance,\n      // };\n      // this.setState(state => ({\n      //   transactions: [...state.transactions, newTransaction],\n      // }));\n    };\n\n    this.onWithdraw = () => {\n      console.log('кнопочка 2 работает');\n      this.setState(prevState => ({\n        balance: prevState.balance - +prevState.amount\n      }));\n    };\n\n    this.onChange = e => {\n      this.setState({\n        amount: e.target.value\n      });\n      console.log(this.state.amount);\n    };\n\n    this.addNumber = e => {\n      const name = e.target.name;\n\n      if (amount !== 0 && amount !== '' && amount > 0) {\n        const newTransaction = {\n          id: uuid(),\n          type: name,\n          balance,\n          date: new Date().toLocaleString('en-US', {\n            hour12: false\n          })\n        };\n      }\n\n      this.setState(state => ({\n        transactions: [...state.transactions, newTransaction]\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: s.dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Controls, {\n      onChange: this.onChange,\n      onDeposit: this.onDeposit,\n      onWithdraw: this.onWithdraw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Balance, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(TransactionHistory, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ekaterinakiruhina/Desktop/REACT/goit-react-hw-02-bank-account/src/components/Dashboard/Dashboard.js"],"names":["React","Component","uuid","Balance","Controls","TransactionHistory","s","INITIAL_STATE","Dashboard","state","transactions","balance","amount","onDeposit","console","log","setState","prevState","onWithdraw","onChange","e","target","value","addNumber","name","newTransaction","id","type","date","Date","toLocaleString","hour12","render","dashboard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,kBAAP,MAA+B,yCAA/B;AACA,OAAOC,CAAP,MAAc,sBAAd;AAEA,MAAMC,aAAa,GAAG,EAAtB;AACA,eAAe,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC/CQ,KAD+C,GACvC;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADuC;;AAAA,SAO/CC,SAP+C,GAOnC,MAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BN,QAAAA,OAAO,EAAEM,SAAS,CAACN,OAAV,GAAoB,CAACM,SAAS,CAACL;AADd,OAAL,CAAvB,EAFgB,CAKhB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACD,KAtB8C;;AAAA,SAwB/CM,UAxB+C,GAwBlC,MAAM;AACjBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BN,QAAAA,OAAO,EAAEM,SAAS,CAACN,OAAV,GAAoB,CAACM,SAAS,CAACL;AADd,OAAL,CAAvB;AAGD,KA7B8C;;AAAA,SA+B/CO,QA/B+C,GA+BpCC,CAAC,IAAI;AACd,WAAKJ,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEQ,CAAC,CAACC,MAAF,CAASC;AAAnB,OAAd;AAEAR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWG,MAAvB;AACD,KAnC8C;;AAAA,SAqC/CW,SArC+C,GAqCnCH,CAAC,IAAI;AAAA,YACPI,IADO,GACEJ,CAAC,CAACC,MADJ,CACPG,IADO;;AAEf,UAAIZ,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAK,EAA3B,IAAiCA,MAAM,GAAG,CAA9C,EAAiD;AAC/C,cAAMa,cAAc,GAAG;AACrBC,UAAAA,EAAE,EAAExB,IAAI,EADa;AAErByB,UAAAA,IAAI,EAAEH,IAFe;AAGrBb,UAAAA,OAHqB;AAIrBiB,UAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAnC;AAJe,SAAvB;AAMD;;AAED,WAAKf,QAAL,CAAcP,KAAK,KAAK;AACtBC,QAAAA,YAAY,EAAE,CAAC,GAAGD,KAAK,CAACC,YAAV,EAAwBe,cAAxB;AADQ,OAAL,CAAnB;AAGD,KAnD8C;AAAA;;AAqD/CO,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAE1B,CAAC,CAAC2B,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAE,KAAKd,QADjB;AAEE,MAAA,SAAS,EAAE,KAAKN,SAFlB;AAGE,MAAA,UAAU,EAAE,KAAKK,UAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAQE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD;;AAlE8C","sourcesContent":["import React, { Component } from 'react';\nimport uuid from 'uuid/v1';\nimport Balance from './Balance/Balance';\nimport Controls from './Controls/Controls';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport s from '../styles.module.css';\n\nconst INITIAL_STATE = {};\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    amount: 0,\n  };\n\n  onDeposit = () => {\n    console.log('кнопочка работает');\n    this.setState(prevState => ({\n      balance: prevState.balance + +prevState.amount,\n    }));\n    // console.log(this.state.balance);\n    // const { balance } = this.state;\n    // const newTransaction = {\n    //   id: uuid(),\n    //   text: balance,\n    // };\n\n    // this.setState(state => ({\n    //   transactions: [...state.transactions, newTransaction],\n    // }));\n  };\n\n  onWithdraw = () => {\n    console.log('кнопочка 2 работает');\n    this.setState(prevState => ({\n      balance: prevState.balance - +prevState.amount,\n    }));\n  };\n\n  onChange = e => {\n    this.setState({ amount: e.target.value });\n\n    console.log(this.state.amount);\n  };\n\n  addNumber = e => {\n    const { name } = e.target;\n    if (amount !== 0 && amount !== '' && amount > 0) {\n      const newTransaction = {\n        id: uuid(),\n        type: name,\n        balance,\n        date: new Date().toLocaleString('en-US', { hour12: false }),\n      };\n    }\n\n    this.setState(state => ({\n      transactions: [...state.transactions, newTransaction],\n    }));\n  };\n\n  render() {\n    return (\n      <div className={s.dashboard}>\n        <Controls\n          onChange={this.onChange}\n          onDeposit={this.onDeposit}\n          onWithdraw={this.onWithdraw}\n        />\n        <Balance />\n\n        <TransactionHistory />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}